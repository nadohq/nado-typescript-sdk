/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { WithdrawPool, WithdrawPoolInterface } from "../WithdrawPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64[]",
        name: "idxs",
        type: "uint64[]",
      },
    ],
    name: "checkMarkedIdxs",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "productIds",
        type: "uint32[]",
      },
    ],
    name: "checkProductBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Base",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "fastWithdrawalFeeAmount",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_clearinghouse",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "markedIdxs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "idx",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "transaction",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "submitFastWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Base",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "idx",
        type: "uint64",
      },
    ],
    name: "submitWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611a57806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063b46f3cb211610081578063ef7b76901161005b578063ef7b7690146101d9578063f2fde38b146101fc578063fd8c52cd1461020f57600080fd5b8063b46f3cb214610180578063b72c37f014610193578063c3b58138146101b357600080fd5b806366b32dad116100b257806366b32dad1461012a578063715018a61461015d5780638da5cb5b1461016557600080fd5b806334fb0541146100d9578063485cc955146100ee5780635a5937f014610101575b600080fd5b6100ec6100e7366004610f62565b610222565b005b6100ec6100fc366004610fba565b61028f565b61011461010f36600461103f565b6103f3565b6040516101219190611081565b60405180910390f35b61014d6101383660046110c5565b609b6020526000908152604090205460ff1681565b6040519015158152602001610121565b6100ec61051d565b6067546040516001600160a01b039091168152602001610121565b6100ec61018e3660046110e0565b610531565b6101a66101a136600461103f565b6107b9565b604051610121919061118f565b6101c66101c13660046111dd565b61088f565b604051600f9190910b8152602001610121565b6101c66101e7366004611222565b609c60205260009081526040902054600f0b81565b6100ec61020a36600461123d565b6109f1565b6100ec61021d36600461125a565b610a81565b6099546001600160a01b0316331461023957600080fd5b67ffffffffffffffff81166000908152609b602052604090205460ff166102895767ffffffffffffffff81166000908152609b60205260409020805460ff19166001179055610289848484610a98565b50505050565b600054610100900460ff16158080156102af5750600054600160ff909116105b806102c95750303b1580156102c9575060005460ff166001145b6103405760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460ff191660011790558015610363576000805461ff0019166101001790555b61036b610ab5565b609980546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff1992831617909255609a80549285169290911691909117905580156103ee576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b606060008267ffffffffffffffff811115610410576104106112a1565b604051908082528060200260200182016040528015610439578160200160208202803683370190505b50905060005b8381101561051357600061047886868481811061045e5761045e6112b7565b90506020020160208101906104739190611222565b610b28565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e391906112cd565b8383815181106104f5576104f56112b7565b6020908102919091010152508061050b816112fc565b91505061043f565b5090505b92915050565b610525610bb9565b61052f6000610c13565b565b67ffffffffffffffff85166000908152609b602052604090205460ff161561059b5760405162461bcd60e51b815260206004820152601c60248201527f5769746864726177616c20616c7265616479207375626d6974746564000000006044820152606401610337565b67ffffffffffffffff85166000908152609b602052604090819020805460ff19166001179055609a5490516355757dbf60e01b81526001600160a01b039091169081906355757dbf906105fa90889088908b908990899060040161133e565b600060405180830381600087803b15801561061457600080fd5b505af1158015610628573d6000803e3d6000fd5b506000925061063e9150869050600181896113fa565b81019061064b91906114fd565b90506000610660826000015160200151610b28565b8251805160409182015182518084019093526002835261434f60f01b602084015292935060601c91906f7fffffffffffffffffffffffffffffff6001600160801b03831611156106c35760405162461bcd60e51b815260040161033791906115f0565b5060006106d9848660000151602001518461088f565b9050806001600160801b0316826001600160801b03161161073c5760405162461bcd60e51b815260206004820152601760248201527f466565206c6172676572207468616e2062616c616e63650000000000000000006044820152606401610337565b6107468183611623565b855160209081015163ffffffff166000908152609c909152604081208054929450839290919061077a908490600f0b61164b565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055506107ac848484610a98565b5050505050505050505050565b606060008267ffffffffffffffff8111156107d6576107d66112a1565b6040519080825280602002602001820160405280156107ff578160200160208202803683370190505b50905060005b8381101561051357609b6000868684818110610823576108236112b7565b905060200201602081019061083891906110c5565b67ffffffffffffffff168152602081019190915260400160002054825160ff9091169083908390811061086d5761086d6112b7565b9115156020928302919091019091015280610887816112fc565b915050610805565b600080846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f491906116ac565b9050601260ff8216111561090757600080fd5b60006109148260126116cf565b61091f90600a6117d6565b9050600061092d82866117e5565b9050600061094266038d7ea4c6800083610c72565b9050600061094e610cf2565b6040516303f7d28360e61b815263ffffffff8a1660048201526001600160a01b03919091169063fdf4a0c090602401602060405180830381865afa15801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be919061189e565b6109c99060056117e5565b905060006109d78383610d69565b90506109e385826118b9565b9a9950505050505050505050565b6109f9610bb9565b6001600160a01b038116610a755760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610337565b610a7e81610c13565b50565b610a89610bb9565b6103ee610a9584610b28565b82845b6103ee6001600160a01b038416836001600160801b038416610d87565b600054610100900460ff16610b205760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610337565b61052f610ea5565b600080610b33610cf2565b6040516338d0dce360e21b815263ffffffff851660048201526001600160a01b03919091169063e343738c9060240160a060405180830381865afa158015610b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba3919061190e565b5190506001600160a01b03811661051757600080fd5b6067546001600160a01b0316331461052f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610337565b606780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000670de0b6b3a7640000600f83810b9085900b02056f7fffffffffffffffffffffffffffffff198112801590610cb957506f7fffffffffffffffffffffffffffffff8113155b6040518060400160405280600281526020016127a360f11b815250906105135760405162461bcd60e51b815260040161033791906115f0565b609954604051635d2e9ad160e01b81526000916001600160a01b031690635d2e9ad190610d2390849060040161199e565b602060405180830381865afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6491906119c6565b905090565b600081600f0b83600f0b13610d7e5781610d80565b825b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790529151600092839290871691610df891906119e3565b6000604051808303816000865af19150503d8060008114610e35576040519150601f19603f3d011682016040523d82523d6000602084013e610e3a565b606091505b5091509150818015610e64575080511580610e64575080806020019051810190610e6491906119ff565b604051806040016040528060028152602001612a2360f11b81525090610e9d5760405162461bcd60e51b815260040161033791906115f0565b505050505050565b600054610100900460ff16610f105760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610337565b61052f33610c13565b6001600160a01b0381168114610a7e57600080fd5b80356001600160801b0381168114610f4557600080fd5b919050565b803567ffffffffffffffff81168114610f4557600080fd5b60008060008060808587031215610f7857600080fd5b8435610f8381610f19565b93506020850135610f9381610f19565b9250610fa160408601610f2e565b9150610faf60608601610f4a565b905092959194509250565b60008060408385031215610fcd57600080fd5b8235610fd881610f19565b91506020830135610fe881610f19565b809150509250929050565b60008083601f84011261100557600080fd5b50813567ffffffffffffffff81111561101d57600080fd5b6020830191508360208260051b850101111561103857600080fd5b9250929050565b6000806020838503121561105257600080fd5b823567ffffffffffffffff81111561106957600080fd5b61107585828601610ff3565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156110b95783518352928401929184019160010161109d565b50909695505050505050565b6000602082840312156110d757600080fd5b610d8082610f4a565b6000806000806000606086880312156110f857600080fd5b61110186610f4a565b9450602086013567ffffffffffffffff8082111561111e57600080fd5b818801915088601f83011261113257600080fd5b81358181111561114157600080fd5b89602082850101111561115357600080fd5b60208301965080955050604088013591508082111561117157600080fd5b5061117e88828901610ff3565b969995985093965092949392505050565b6020808252825182820181905260009190848201906040850190845b818110156110b95783511515835292840192918401916001016111ab565b803563ffffffff81168114610f4557600080fd5b6000806000606084860312156111f257600080fd5b83356111fd81610f19565b925061120b602085016111c9565b915061121960408501610f2e565b90509250925092565b60006020828403121561123457600080fd5b610d80826111c9565b60006020828403121561124f57600080fd5b8135610d8081610f19565b60008060006060848603121561126f57600080fd5b611278846111c9565b925061128660208501610f2e565b9150604084013561129681610f19565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156112df57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161130e5761130e6112e6565b5060010190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b606081526000611352606083018789611315565b602067ffffffffffffffff808816828601528483036040860152828684528284019050828760051b8501018860005b898110156113e857868303601f190184528135368c9003601e190181126113a757600080fd5b8b018035868111156113b857600080fd5b8036038d13156113c757600080fd5b6113d485828a8501611315565b958801959450505090850190600101611381565b50909c9b505050505050505050505050565b6000808585111561140a57600080fd5b8386111561141757600080fd5b5050820193919092039150565b6040805190810167ffffffffffffffff81118282101715611447576114476112a1565b60405290565b6040516080810167ffffffffffffffff81118282101715611447576114476112a1565b600082601f83011261148157600080fd5b813567ffffffffffffffff8082111561149c5761149c6112a1565b604051601f8301601f19908116603f011681019082821181831017156114c4576114c46112a1565b816040528381528660208588010111156114dd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561150f57600080fd5b813567ffffffffffffffff8082111561152757600080fd5b9083019081850360a081121561153c57600080fd5b611544611424565b608082121561155257600080fd5b61155a61144d565b91508335825261156c602085016111c9565b602083015261157d60408501610f2e565b604083015261158e60608501610f4a565b6060830152908152608083013590828211156115a957600080fd5b6115b587838601611470565b60208201529695505050505050565b60005b838110156115df5781810151838201526020016115c7565b838111156102895750506000910152565b602081526000825180602084015261160f8160408501602087016115c4565b601f01601f19169190910160400192915050565b60006001600160801b0383811690831681811015611643576116436112e6565b039392505050565b600081600f0b83600f0b60008212826f7fffffffffffffffffffffffffffffff0382138115161561167e5761167e6112e6565b826f7fffffffffffffffffffffffffffffff190382128116156116a3576116a36112e6565b50019392505050565b6000602082840312156116be57600080fd5b815160ff81168114610d8057600080fd5b600060ff821660ff8416808210156116e9576116e96112e6565b90039392505050565b600181815b8085111561172d578160001904821115611713576117136112e6565b8085161561172057918102915b93841c93908002906116f7565b509250929050565b60008261174457506001610517565b8161175157506000610517565b816001811461176757600281146117715761178d565b6001915050610517565b60ff841115611782576117826112e6565b50506001821b610517565b5060208310610133831016604e8410600b84101617156117b0575081810a610517565b6117ba83836116f2565b80600019048211156117ce576117ce6112e6565b029392505050565b6000610d8060ff841683611735565b600081600f0b83600f0b6f7fffffffffffffffffffffffffffffff60008213600084138383048511828216161561181e5761181e6112e6565b6f7fffffffffffffffffffffffffffffff19600085128281168783058712161561184a5761184a6112e6565b60008712925085820587128484161615611866576118666112e6565b8585058712818416161561187c5761187c6112e6565b5050509290910295945050505050565b8051600f81900b8114610f4557600080fd5b6000602082840312156118b057600080fd5b610d808261188c565b600081600f0b83600f0b806118de57634e487b7160e01b600052601260045260246000fd5b6f7fffffffffffffffffffffffffffffff19821460001982141615611905576119056112e6565b90059392505050565b600060a0828403121561192057600080fd5b60405160a0810181811067ffffffffffffffff82111715611943576119436112a1565b604052825161195181610f19565b815261195f6020840161188c565b60208201526119706040840161188c565b60408201526119816060840161188c565b60608201526119926080840161188c565b60808201529392505050565b60208101600283106119c057634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156119d857600080fd5b8151610d8081610f19565b600082516119f58184602087016115c4565b9190910192915050565b600060208284031215611a1157600080fd5b81518015158114610d8057600080fdfea26469706673582212200c96ad2f89a075dc2d59fa73979a810c5a2dd567593e9625cd348cef4b33bfd864736f6c634300080d0033";

type WithdrawPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawPool__factory extends ContractFactory {
  constructor(...args: WithdrawPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WithdrawPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WithdrawPool__factory {
    return super.connect(runner) as WithdrawPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawPoolInterface {
    return new Interface(_abi) as WithdrawPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WithdrawPool {
    return new Contract(address, _abi, runner) as unknown as WithdrawPool;
  }
}
